import asyncio

from aiogram import (
    Bot,
    types, 
)
from aiogram.utils.keyboard import (
    InlineKeyboardBuilder,
)



async def send_then_delete(
    bot: Bot,
    message: types.Message, 
    text: str = '–í—Ä–µ–º–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ', 
    seconds=30,
):
    new_message = await bot.send_message(message.chat.id, text, parse_mode="HTML")
    await asyncio.sleep(seconds)  
    await new_message.delete()


def get_button_exit(title: str = 'üîô  –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é'):
    '''
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–Ω–æ–ø–∫—É –≤—ã—Ö–æ–¥–∞ –≤ –º–µ–Ω—é
    '''
    button_exit = types.InlineKeyboardButton(
        text=title, callback_data=f"exit"
    )
    return button_exit


def get_button_back():
    '''
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥
    '''
    button_back = types.InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥", callback_data=f"back"
    )
    return button_back


def get_web_app():
    '''
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥
    '''
    builder = InlineKeyboardBuilder()
    builder.row(types.InlineKeyboardButton(
        text='web_app', 
        web_app=types.WebAppInfo(
            url='https://basestore.site/',
        )
    ))
    return builder.as_markup()


def get_menu_keyboard(training_status):
    '''
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–µ—Ä–≤—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    '''
    builder = InlineKeyboardBuilder()
    if training_status != 'finished':
        if not training_status:
            text = "–ü—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ –æ–±—É—á–µ–Ω–∏—é üë©‚Äçüè´"
        else:
            text = "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–±—É—á–µ–Ω–∏–µ üë©‚Äçüè´"

        builder.row(types.InlineKeyboardButton(
            text=text, callback_data=f"studying",
        ))
    return builder.as_markup()


def get_studying_keyboard():
    '''
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–µ—Ä–µ–≤–æ–¥–∞ –Ω–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    '''
    builder = InlineKeyboardBuilder()
    builder.row(types.InlineKeyboardButton(
            text='–ü–µ—Ä–µ–π—Ç–∏ –∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é üìù', callback_data=f"go_to_testing",
    ))
    return builder.as_markup()
